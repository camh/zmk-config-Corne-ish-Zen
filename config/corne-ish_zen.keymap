/*
*
* Copyright (c) 2021 Cam Hunt
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV 1
#define NUM 2
#define MED 3
#define FUN 4
#define SYM 5

#define UNDO LG(Z)
#define REDO LG(LS(Z))
#define MEH LC(LS(LALT))

#define PLAY C_PP
#define NEXT C_NEXT
#define PREV C_PREV
#define VOL_DN C_VOL_DN
#define VOL_UP C_VOL_UP

#define NXTB F17 // next tab
#define PVTB F16 // prev tab
#define FWD LA(F17) // fowrard
#define BCK LA(F16) // back

#define END_CALL LC(LA(LG(END)))

&mt {
    tapping_term_ms = <211>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <211>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "";

// -------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y   |  U  |  I  |  O  |  P  |  \  |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H   |  J  |  K  |  L  |  ;  |  '  |
// |  RET |  Z  |  X  |  C  |  V  |  B  |   |  N   |  M  |  ,  |  .  |  -  |  /  |
//                    | GUI | RET | SPC |   | BKSP | ESC | TAB |
//                    |     | NAV | NUM |   | MED  | FUN | MEH |

            bindings = <
   &kp ESC      &kp Q       &kp W        &kp E       &kp R        &kp T          &kp Y         &kp U       &kp I        &kp O        &kp P          &kp BSLH
   &kp TAB      &hm LSFT A  &hm LCTRL S  &hm LALT D  &hm LGUI F   &lt NUM G      &kp H         &hm RGUI J  &hm RALT K   &hm LCTRL L  &hm LSFT SEMI  &kp SQT
   &hm MEH RET  &lt SYM Z   &kp X        &kp C       &kp V        &kp B          &kp N         &kp M       &kp COMMA    &kp DOT      &lt SYM MINUS  &hm MEH SLASH
                                         &kp LCMD    &mo NAV      &kp SPACE      &lt MED BKSP  &mo NUM     &lt FUN TAB
            >;
        };

        nav_layer {
            label = "";

// --------------------------------------------------------------------------------
// |      |     |     |     |     |     |   | LFRG| LPAG | UP  | RPAG| RFRG| DEL  |
// |      |     |     |     |     |     |   | PGUP| LFT  | DWN | RGT |     | DELL |
// |      |     |     |     |     |     |   | PGDN| PVTB | NXTB| BCK | FWD |      |
//                    |     |     |     |   |     |      |     |

            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans    &kp LC(LEFT)  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp LC(RIGHT)  &kp DEL
    &trans  &trans  &trans  &trans  &trans  &kp REDO  &kp PG_UP     &kp LEFT      &kp DOWN  &kp RIGHT      &trans         &kp LG(BKSP)
    &trans  &trans  &trans  &trans  &trans  &kp UNDO  &kp PG_DN     &kp PVTB      &kp NXTB  &kp BCK        &kp FWD        &trans
                            &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        numbers_layer {
            label = "";

// ------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |  *  |  7  |  8  |  9  |  +  |     |
// |      |     |     |     |     |     |   |  /  |  4  |  5  |  6  |  -  |  0  |
// |      |     |     |     |     |     |   |  ,  |  1  |  2  |  3  |  .  |  :  |
//                    |     |     |     |   |     |     |     |

            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_ASTERISK  &kp N7  &kp N8  &kp N9  &kp KP_PLUS   &trans
    &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_SLASH     &kp N4  &kp N5  &kp N6  &kp KP_MINUS  &kp KP_N0
    &trans  &trans  &trans  &trans  &trans  &trans  &kp CMMA         &kp N1  &kp N2  &kp N3  &kp KP_DOT    &kp COLON
                            &trans  &trans  &trans  &trans           &trans  &trans
            >;
        };

        media_layer {
            label = "";

// --------------------------------------------------------------------------------------
// | BTCLR | BT2 |      |  VOL_UP  |      |     |   |     |     |     |     |     |     |
// |  BT0  | BT3 | PREV |  VOL_DN  | NEXT |     |   |     |     |     |     |     |     |
// |  BT1  | BT4 |      |   PLAY   |      |     |   |     |     |     |     |     |     |
//                      |          |      |     |   |     |     |     |

            bindings = <
    &bt BT_CLR    &bt BT_SEL 2  &trans    &kp VOL_UP  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &bt BT_SEL 0  &bt BT_SEL 3  &kp PREV  &kp VOL_DN  &kp NEXT  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &bt BT_SEL 1  &bt BT_SEL 4  &trans    &kp PLAY    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans      &trans    &trans  &trans  &trans  &trans
            >;
        };

        fun_layer {
            label = "";
                
// -----------------------------------------------------------------------------
// |     | F11 | F12 | F13 | F14 | F15 |   |     |     |     |     |     |     |
// |     |  F6 |  F7 |  F8 |  F9 | F10 |   |     |     |     |     |     |     |
// |     |  F1 |  F2 |  F3 |  F4 |  F5 |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |

            bindings = <
    &trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans  &trans  &trans  &trans  &trans  &trans
                              &trans   &trans   &trans   &trans  &trans  &trans
            >;
        };

        symbols_layer {
            label = "";
                
// -------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  `  |  ~  |      |
// |      |  …  |  [  |  ]  |  {  |  }  |   |  (  |  )  |  '  |  "  |  —  |      |
// |      |     |  \  |  |  |  _  |  -  |   |  =  |  +  |  /  |  ?  |     |      |
//                    |     |     |     |   |     |     |     |

            bindings = <
    &trans  &kp EXCL      &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR   &kp GRAVE  &kp TILDE          &trans
    &trans  &kp LA(SEMI)  &kp LBKT  &kp RBKT  &kp LBRC   &kp RBRC   &kp LPAR   &kp RPAR  &kp SQT    &kp DQT    &kp LS(LA(MINUS))  &trans
    &trans  &trans        &kp BSLH  &kp PIPE  &kp UNDER  &kp MINUS  &kp EQUAL  &kp PLUS  &kp SLASH  &kp QMARK  &trans             &trans
                                    &trans    &trans     &trans     &trans     &trans    &trans
            >;
        };


        layer {
            label = "";
                
// -----------------------------------------------------------------------------
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
// |     |     |     |     |     |     |   |     |     |     |     |     |     |
//                   |     |     |     |   |     |     |     |

            bindings = <
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
